/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_caoym_WinFileMappingBuffer */

#ifndef _Included_com_caoym_WinFileMappingBuffer
#define _Included_com_caoym_WinFileMappingBuffer
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_caoym_WinFileMappingBuffer
 * Method:    open
 * Signature: (Ljava/lang/String;I)Z
 */
JNIEXPORT jboolean JNICALL Java_com_caoym_WinFileMappingBuffer_open
  (JNIEnv *, jobject, jstring, jint);
/*
 * Class:     com_caoym_WinFileMappingBuffer
 * Method:    close
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_caoym_WinFileMappingBuffer_close
  (JNIEnv *, jobject);
/*
 * Class:     com_caoym_WinFileMappingBuffer
 * Method:    getBuffer
 * Signature: ()Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobject JNICALL Java_com_caoym_WinFileMappingBuffer_getBuffer
  (JNIEnv *, jobject);

/*
 * Class:     com_caoym_WinFileMappingBuffer
 * Method:    CreateJNIObj
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_caoym_WinFileMappingBuffer_CreateJNIObj
  (JNIEnv *, jobject);

/*
 * Class:     com_caoym_WinFileMappingBuffer
 * Method:    DestroyJNIObj
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_caoym_WinFileMappingBuffer_DestroyJNIObj
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
